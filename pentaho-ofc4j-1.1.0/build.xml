<?xml version="1.0"?>
<project name="OFC4J" default="dist">
    <property file="build.properties"/>
    
    <property name="dist.standard.jar"
        value="${dist.dir}/${build.name}-${build.version}-${build.minor}.jar"/>
    <property name="dist.all.jar"
       value="${dist.dir}/${build.name}-${build.version}-${build.minor}-all.jar"/>
    <property name="dist.src.zip"
       value="${dist.dir}/${build.name}-${build.version}-${build.minor}-src.zip"/>
    <property name="dist.standard.zip"
       value="${dist.dir}/${build.name}-${build.version}-${build.minor}.zip"/>
    
    <tstamp/>

    <target name="clean">
        <delete dir="${dist.dir}"/>
        <delete dir="${build.dir}"/>
        <delete dir="${doc.dir}"/>
    </target>

    <target name="-prepare">
        <mkdir dir="${dist.dir}"/>
        <mkdir dir="${doc.dir}"/>
        <mkdir dir="${build.dir}"/>
        <mkdir dir="${build.dir}/classes"/>
        <mkdir dir="${build.dir}/test-classes"/>
        <mkdir dir="${build.dir}/test-reports"/>
    </target>

    <target name="build">
        <antcall target="-prepare"/>
        <antcall target="-build-main"/>
        <antcall target="-build-test"/>
        <antcall target="-run-tests"/>
    </target>

    <target name="-build-main">
        <javac
            srcdir="${src.dir}"
            destdir="${build.dir}/classes"
            source="1.5"
            classpath="${build.classpath}"
            debug="${debug}"
            debuglevel="lines,vars,source"/>
    </target>

    <target name="-build-test">
        <javac
           srcdir="${src.test.dir}"
           destdir="${build.dir}/test-classes"
           source="1.5"
           classpath="${test.classpath};${build.dir}/classes"
           debug="true"
           debuglevel="lines,vars,source"/>
    </target>

    <target name="-run-tests">
        <junit
            fork="true"
            forkmode="once"
            printsummary="yes"
            showoutput="yes"
            haltonfailure="yes">
            <classpath>
                <pathelement location="${build.dir}/classes"/>
                <pathelement location="${build.dir}/test-classes"/>
                <pathelement path="${build.classpath}"/>
                <pathelement path="${test.classpath}"/>
            </classpath>
            <formatter type="xml"/>
            <formatter type="plain"/>
            <batchtest todir="${build.dir}/test-reports">
                <fileset
                    dir="${src.test.dir}"
                    includes="**/*TestCase.java"/>
            </batchtest>
        </junit>
    </target>

    <target name="gallery" depends="build">
        <echo>Navigate your browser to http://localhost:8080 when this has started...</echo>
        <java
            classname="${gallery.boot.class}"
            classpath="${test.classpath};${build.classpath};${build.dir}/test-classes;${build.dir}/classes"
            fork="true"
            dir="${gallery.script.dir}"/>
    </target>

    <target name="doc">
        <javadoc
            sourcepath="${src.dir}"
            destdir="${doc.dir}"
            public="true"
            windowtitle="OFC4J API"
            excludepackagenames="${doc.excludes}"
            defaultexcludes="no"
            overview="${src.dir}/overview.html">
            <link offline="false" href="http://java.sun.com/javase/6/docs/api/"/>
        </javadoc>
    </target>
    
    <target name="dist" depends="build">
        <antcall target="-standard-jar"/>
        <antcall target="-all-jar"/>
        <antcall target="-source-archive"/>
        <antcall target="-standard-archive"/>
    </target>

    <target name="-standard-jar">
        <jar
            destfile="${dist.standard.jar}"
            basedir="${build.dir}/classes"
            compress="true">
            <manifest>
                <section name="${build.name}">
                    <attribute name="Built-On" value="${TODAY}"/>
                    <attribute name="Version" value="${build.version}-${build.minor}"/>
                    <attribute name="URI" value="http://code.google.com/p/ofcj/"/>
                </section>
                <section name="JSONObject">
                    <attribute name="URI" value="http://www.json.org/"/>
                </section>
            </manifest>
        </jar>
    </target>
            
    <target name="-all-jar">
        <taskdef name="jarjar" classname="com.tonicsystems.jarjar.JarJarTask"
            classpath="lib/build/jarjar-1.0rc7.jar"/>
        
        <jarjar jarfile="${dist.all.jar}">
            <fileset dir="${build.dir}/classes"/>
            <zipfileset src="lib/depends/xstream-1.3.jar"/>
            <rule pattern="com.thoughtworks.xstream.**" result="ofc4j.com.thoughtworks.xstream.@1"/>
            <manifest>
                <section name="${build.name}">
                    <attribute name="Built-On" value="${TODAY}"/>
                    <attribute name="Version" value="${build.version}-${build.minor}"/>
                    <attribute name="URI" value="http://code.google.com/p/ofcj/"/>
                </section>
                <section name="xstream">
                    <attribute name="Version" value="1.3"/>
                    <attribute name="URI" value="http://xstream.codehaus.org/"/>
                </section>
                <section name="JSONObject">
                    <attribute name="URI" value="http://www.json.org/"/>
                </section>
            </manifest>
        </jarjar>
    </target>
    
    <target name="-source-archive">
        <zip
            destfile="${dist.src.zip}"
            basedir="${src.dir}"
            compress="true"
        />
    </target>
    
    <target name="-standard-archive">
        <antcall target="doc"/>
        <zip
          destfile="${dist.standard.zip}"
          compress="true">
            <zipfileset dir="${doc.dir}" prefix="doc"/>
            <zipfileset dir="lib/depends" prefix="lib"/>
            <zipfileset file="${dist.src.zip}"/>
            <zipfileset file="${dist.standard.jar}"/>
        </zip>
    </target>
</project>
